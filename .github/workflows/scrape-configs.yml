name: Scrape and Post Configs
on:
  schedule:
    - cron: '*/15 * * * *'  # هر 15 دقیقه (به جای هر 5 دقیقه برای جلوگیری از rate limiting)
  workflow_dispatch:  # امکان اجرای دستی

env:
  PYTHON_VERSION: '3.11'  # نسخه پایتون
  MAX_RUN_TIME: 300       # حداکثر زمان اجرا (ثانیه)

jobs:
  scrape-configs:
    name: Scrape and Post
    runs-on: ubuntu-24.04
    timeout-minutes: 5    # محدودیت زمانی برای Job

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # دریافت کامل تاریخچه برای کار با Git

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'    # فعالسازی کش برای pip

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}

      - name: Create requirements.txt
        run: |
          echo "requests==2.31.0" > requirements.txt
          echo "beautifulsoup4==4.12.2" >> requirements.txt
          echo "python-telegram-bot==20.3" >> requirements.txt
          echo "lxml==4.9.3" >> requirements.txt

      - name: Run scraper with timeout
        run: |
          timeout ${{ env.MAX_RUN_TIME }} python config_scraper.py || echo "Scraper finished or timed out"
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          PYTHONUNBUFFERED: 1  # برای لاگینگ بلادرنگ

      - name: Archive log files
        if: always()  # حتی اگر مرحله قبل fail شود اجرا شود
        run: |
          mkdir -p ./logs
          [ -f scraper.log ] && mv scraper.log ./logs/scraper_$(date +%Y%m%d_%H%M%S).log
          echo "Logs archived"

      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          
          # فقط در صورت وجود تغییرات
          if git diff --exit-code --quiet; then
            echo "No changes to commit"
          else
            git add -A
            git commit -m "Auto-update: Processed configs [skip ci]"
            git push origin HEAD:${{ github.ref_name }}
            echo "Changes pushed successfully"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
